PATH:
# On Laptop
  # data_root: MyRepo/CamLidCalib_Trans/data/Kitti
  # save_writter_path: MyRepo/result/torchlogs/
  # prj_dir: MyRepo/result/
  # save_pcd_path: MyRepo/result/

# On HPC
  #data_root: Dataset/
  #save_writter_path: result/torchlogs/
  #prj_dir: /project/p_calibrrn/result
  # save_pcd_path: result/

# Docker image
  data_root: /Dataset/
  save_writter_path: /result/torchlogs/
  prj_dir: /result/
  save_pcd_path: /result/

TRAIN:
  # Network Architecture
  img_depth: 3              # Fixed parameter. Avoid modify
  pc_feat_dim: 1
  num_points: 65535
  resized_img:        #[93,311]

  mlp_blocks: 2             # For Attention in both Vit and PCtrs
  mlp_feature: 64
  mlp_heads: 2
  mlp_hidden: 64 
  mlp_dropout: 0.1 

  rt_channels: 16 #384      # Rotation Translation gen network
  rt_hidden_size: 128      
  rt_Dropout: 0.7  

  cam_patch_dim: 8          # Vit Configurations
  cam_patch_method: 1                       # 1,2,3
  cam_conv_channels: 8      
  cam_position_en_method: 1                 # 1,2

  pc_arch: PFTrans   # PCTrans or PFTrans
  # Point Cloud Transformer
  pc_conv_channels: 3       # PCtrs Configurations
  pc_conv_blocks: 1                         ### problem when > 1
  pc_pool_type: null                        # None, max, avg
  pc_out_size: null                         # None or (M,N)
  pc_cluster_window_size: 0.5               #2?
  pc_nei_quer_radius: 200         # tp.ball_query
  num_neighbor: 200
  prev_grid_size: 0.04            # KPConv
  sigma: 1.0

  # Point Feature Transformer
  n_furthest_sam_points: [1024, 256, 64]
  n_neighbor_sample: [[16,32,64], [32,64,128], [128,256,512]]
  radius: [[0.1, 0.2, 0.4], [0.2, 0.4, 0.8], [0.4, 0.8, 1.6]]
  pf_conv_channels: [[4, 8, 16], [8, 16, 32], [16, 32, 64]]

  # training
  batch_size: 8     # 60 batch size for training
  epochs: 20
  optimizer: AdamW 
  learning_rate: 5e-4  #0.006
  momentum: 0.9
  weight_decay: 0.01  #todo: 0.0001
  sche_step_size: 20
  sche_gamma: 0.1
  num_recursive_iter: 1

  multi_gpu_tr:  true
  data_parallel: false  # w/o multi_gpu_tr,need one node only.

LOG_CKP:
  logging_type: tensorboard      #all, tensorboard, wandb, comet_ml, None
  print_log_freq: 5
  save_ckp_freq: 5
  resume_from_checkpoint: null   # null or 1,2,... the next iteration number

